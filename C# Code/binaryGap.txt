A binary gap within a positive integer N is any maximal sequence of consecutive zeros that is surrounded by ones at both ends in the binary representation of N.

For example, number 9 has binary representation 1001 and contains a binary gap of length 2. The number 529 has binary representation 1000010001 and contains two binary gaps: one of length 4 and one of length 3. The number 20 has binary representation 10100 and contains one binary gap of length 1. The number 15 has binary representation 1111 and has no binary gaps. The number 32 has binary representation 100000 and has no binary gaps.

Write a function:

class Solution { public int solution(int N); }

that, given a positive integer N, returns the length of its longest binary gap. The function should return 0 if N doesn't contain a binary gap.

For example, given N = 1041 the function should return 5, because N has binary representation 10000010001 and so its longest binary gap is of length 5. Given N = 32 the function should return 0, because N has binary representation '100000' and thus no binary gaps.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [1..2,147,483,647].





using System;
using System.Collections.Generic;
using System.Linq;

namespace binarygap
{
    class Program
    {
        static void Main(string[] args)
        {
            int N = 529;
            int asn= Solution.Gap(N);
            Console.WriteLine("Hello World!"+ asn);
            Console.ReadLine();
        }
    }

   public static class Solution
    {
        public static int Gap(int N)
        {

            int ans = 0, reminder = 0;           
            List<int> max = new List<int>();

            if (N == 0) return ans;
            reminder = N;
            while (reminder >= 1)
            {
                if (reminder % 2 == 0)
                {
                    ans = ans + 1;
                    reminder = reminder / 2;
                }
                else
                {
                    if (reminder == 1)
                    {
                        if(max.Count>0)
                        max.Add(ans);
                    }
                    else max.Add(ans);
                    reminder = reminder / 2;
                    ans = 0;
                  }
            }

            if (max.Count > 0)
                ans =max.Max();
            return ans;

        }
    }
}


We are given two strings P and Q, each consisting of N lowercase English letters. For each position in the strings, we have to choose one letter from either P or Q, in order to construct a new string S, such that the number of distinct letters in S is minimal. Our task is to find the number of distinct letters in the resulting string S.

For example, if P = "ca" and Q = "ab", S can be equal to: "ca", "cb", "aa" or "ab". String "aa" has only one distinct letter ('a'), so the answer is 1 (which is minimal among those strings).

Write a function:

class Solution { public int solution(string P, string Q); }

that, given two strings P and Q, both of length N, returns the minimum number of distinct letters of a string S, that can be constructed from P and Q as described above.

Examples:

1. Given P = "abc", Q = "bcd", your function should return 2. All possible strings S that can be constructed are: "abc", "abd", "acc", "acd", "bbc", "bbd", "bcc", "bcd". The minimum number of distinct letters is 2, which be obtained by constructing the following strings: "acc", "bbc", "bbd", "bcc".

2. Given P = "axxz", Q = "yzwy", your function should return 2. String S must consist of at least two distinct letters in this case. We can construct S = "yxxy", where the number of distinct letters is equal to 2, and this is the only optimal solution.

3. Given P = "bacad", Q = "abada", your function should return 1. We can choose the letter 'a' in each position, so S can be equal to "aaaaa".

4. Given P = "amz", Q = "amz", your function should return 3. The input strings are identical, so the only possible S that can be constructed is "amz", and its number of distinct letters is 3.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [1..200,000];
strings P and Q are both of length N;
strings P and Q are made only of lowercase letters (a−z);
strings P and Q contain a total of at most 20 distinct letters.

leetcode 1197. Minimum Knight Moves




You would like to find the sentence containing the largest number of words in some given text. The text is specified as a string S consisting of N characters: letters, spaces, dots (.), question marks (?) and exclamation marks (!). The text can be divided into sentences by splitting it at dots, question marks and exclamation marks. A sentence can be divided into words by splitting it at spaces. A sentence without words is valid, but a valid word must contain at least one letter. For example, given S = "We test coders. Give us a try?" there are three sentences: "We test coders","Give us a try" and "". The first sentence contains three words: "We", "test" and "coders". The second sentence contains four words: "Give", "us", "a" and "try". The third sentence is empty. Write a function: class Solution { public int solution(String 5); } that, given a string S consisting of N characters, returns the maximum number of words in a sentence. 11 Write a function: class Solution { public int solution(String 5); } Tes that , given a string S consisting of N characters, returns the maximum number of words in a sentence. For example, given S = "We test coders. Give us a try?", the function should return 4, as explained above. Given S = "Forget CVs.. Save time . x x", the function should return 2, as there are four sentences: "Forget CVs" (2 words), " (0 words), "Save time "(2 words) and" x x" (2 words).



You are given a list of all the transactions on a bank account during the year 2020. The account was empty at the beginning of the year (the balance was 0). Each transaction specifies the amount and the date it was executed. If the amount is negative (i.e. less than 0) then it was a card payment, otherwise it was an incoming transfer (amount at least 0). The date of each transaction is in YYYY-MM-DD format: for example, 2020-05-20 represents 20th May 2020. Additionally, there is a fee for having a card (omitted in the given transaction list), which is 5 per month. This fee is deducted from the account balance at the end of each month unless there were at least three payments made by card for a total cost of at least 100 within that month. Your task is to compute the final balance of the account at the end of the year 2020. Write a function: strinell TE intention antin Your task is to compute the final balance of the account att end of the year 2020. Write a function: class solution { public int solution(int[] A, String[] D); } that, given an array A of N integers representing transaction amounts and an array D of N strings representing transaction dates, returns the final balance of the account at the end of the year 2020. Transaction number K (for K within the range [0..N-1]) was executed on the date represented by D[K] for amount A[K]. Examples: 1. Given A = [100, 100, 100, -10] and D = ["2020-12-31", "2020-12-22", "2020-12-03", "2020-12-29"), the function should return 230. Total income was equal to 100 + 100 + 100 - 10 = 290 and the fee was paid every month, so 290 - (5 * 12) = 230. -


John likes to travel. He has visited a lot of cities over many years. Whenever he visits a city, he takes a few photos and saves them on his computer. Each photo has a name with an extension ("jpg", "png" or "jpeg") and there is a record of the name of the city where the photo was taken and the time and date the photo; for example: "photo.jpg, Warsaw, 2013-09-05 14:08:15". Note that, in some rare cases, photos from different locations may share the time and date, due to timezone differences. John notices that his way of filing photos on his computer has become a mess. He wants to reorganize the photos. First he decides to group the photos by city, then, within each such group, sort the photos by the time they were taken and finally assign consecutive natural numbers to the photos, starting from 1. Afterwards he intends to rename all the photos. The new name of each photo should begin with the name of the city followed by the number already assigned to that photo. The number of every photo in each group should have the same length (equal to the length of the largest number in this group); thus, John needs to add some leading zeros to the numbers. The new name of the photo should end with the extension, which should remain the same. Your task is to help John by finding the new name of each photo. Each of John's photos has the format: "<<photoname>>.<<extension>>, <<city_name>>, yyyy-mm-dd hh:mm:ss", where "<<photoname>>", "<<extension>>" and "<<city_name>>" consist only of letters of the English alphabet and supply the name of the photo, the file name extension and the city name, respectively. Be aware that the names of the photos may not be unique. Write a function: def solution (S) that, given a string representing the list of M photos, returns the string representing the list of the new names of all photos (the order of photos should stay the same). For example, given a string: photo.jpg, Warsaw, 2013-09-05 14:08:15 john.png, London, 2015-06-20 15:13:22 myFriends.png, Warsaw, 2013-09-05 14:07:13 Eiffel.jpg, Paris, 2015-07-23 08:03:02 pisatower.jpg, Paris, 2015-07-22 23:59:59 BOB.jpg -jpg, London, 2015-08-05 00:02:03 notredame.png, e.png, Paris, 2015-09-01 12:00:00 mo ing Warca 2013-09-06 me.jpg, Warsaw, 15:40:22 a.png, Warsaw, 2016-02-13 -13 13:33:50 .jpg, Warsaw, 2016-01-02 15:12:22 c.jpg, Warsaw, 2016-01-02 14:34:30 d.jpg, Warsaw, 2016-01-02 15:15:01 e.png, Warsaw, 2016-01-02 09:49:09 f.png, Warsaw, 2016-01-02 10:55:32 g.jpg, Warsaw, 2016-02-29 22:13:11 your function should return: Warsaw02.jpg London1.png Warsaw01.png Paris2.jpg Paris1.jpg London2.jpg Londonz.JP Paris3.png Warsaw03.jpg warsawo JP Warsaw09.png Warsaw07.jpg warsaw Warsaw06.jpg Warsaw08.jpg Warsaw04.png Warsaw05.png Warsaw10.jpg as there are ten photos taken in Warsaw (numbered from 01 to 10), two photos in London (numbered from 1 to 2) and three photos in Paris (numbered from 1 to 3). The new names of the photos are returned in the same order as in the given string. Assume that: • M is an integer within the range [1..100]; Each year is an integer within the range [2000..2020]; • Each line of the input string is of the format "<<photoname>>.<<extension>>, <<city_name>>, yyyy-mm-dd_hh:mm:ss" and lines are separated with newline characters; • Each photo name (without extension}) and city name consists only of at least 1 and at most 20 letters from the English alphabet; • Each name f the city starts with a capital letter and is I by lower case letters; • No two photos from the same location share the same date and time; • Each extension is "jpg", "png" or "jpeg". In your solution, focus on correctness. The performance of your solution will not be the focus of the assessment.